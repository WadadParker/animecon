// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

// Looking for ways to speed up your queries, or scale easily with your serverless or edge functions?
// Try Prisma Accelerate: https://pris.ly/cli/accelerate-init

generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "postgresql"
  url       = env("DATABASE_URL")
  directUrl = env("DIRECT_URL")
}

enum PaymentMethod {
  PHONEPE_UPI
  PAYMENT_SCREENSHOT
}

enum PaymentStatus {
  PENDING
  VERIFIED
  FAILED
}

model User {
  id            Int           @id @default(autoincrement())
  name          String
  email         String        @unique
  googleId      String        @unique
  isAdmin       Boolean       @default(false)
  isVerified    Boolean       @default(false)
  createdAt     DateTime      @default(now())
  updatedAt     DateTime      @updatedAt

  payments      Payment[]
  userAnimes    UserAnime[]
  pollAnswers   PollAnswer[]
  chatMessages  ChatMessage[]
}

model Payment {
  id             Int           @id @default(autoincrement())
  user           User          @relation(fields: [userId], references: [id])
  userId         Int
  paymentMethod  PaymentMethod
  status         PaymentStatus @default(PENDING)
  screenshotUrl  String?       // Nullable, only for PAYMENT_SCREENSHOT
  createdAt      DateTime      @default(now())
  updatedAt      DateTime      @updatedAt
}

model Anime {
  id          Int          @id @default(autoincrement())
  title       String       @unique
  description String?
  logoUrl     String?
  // Add more fields as needed

  userAnimes  UserAnime[]
}

model UserAnime {
  id        Int      @id @default(autoincrement())
  user      User     @relation(fields: [userId], references: [id])
  userId    Int
  anime     Anime    @relation(fields: [animeId], references: [id])
  animeId   Int
  watchedAt DateTime @default(now())

  @@unique([userId, animeId]) // Prevent duplicate entries
}

model Poll {
  id          Int          @id @default(autoincrement())
  question    String
  createdById Int?
  createdAt   DateTime     @default(now())
  updatedAt   DateTime     @updatedAt

  options     PollOption[]
  answers     PollAnswer[]
}

model PollOption {
  id          Int         @id @default(autoincrement())
  optionText  String
  poll        Poll        @relation(fields: [pollId], references: [id])
  pollId      Int
  createdAt   DateTime    @default(now())

  pollAnswers PollAnswer[]
}

model PollAnswer {
  id           Int          @id @default(autoincrement())
  user         User         @relation(fields: [userId], references: [id])
  userId       Int
  poll         Poll         @relation(fields: [pollId], references: [id])
  pollId       Int
  pollOption   PollOption   @relation(fields: [pollOptionId], references: [id])
  pollOptionId Int
  createdAt    DateTime     @default(now())

  @@unique([userId, pollId], name: "unique_user_poll") // One answer per poll per user
}

model ChatMessage {
  id        Int      @id @default(autoincrement())
  user      User     @relation(fields: [userId], references: [id])
  userId    Int
  message   String
  createdAt DateTime @default(now())
}